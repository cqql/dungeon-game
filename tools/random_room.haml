:ruby
  # The room maps
  # 0 - just a tile
  # 1 - wall
  # 2 - enemy
  # 3 - save point
  #
  # You will always spawn in the top left and the teleporter to the next room will be in the bottom right.
  # There could also be NPCs and merchants next your spawn point or the teleporter so leave some space around there.

  room1 = <<-ROOM1
  00000000000000000000
  00000001111111111110
  00000001000002000010
  00000000000002000010
  00011111111111111110
  00010000000000000000
  00010020111111100000
  00010020100000100000
  00010000100200100000
  00010020100000100000
  00010000100000100000
  00010000100010000000
  00011200100010000200
  00000000100010000000
  11111111100011110000
  00000000000000010000
  00000002000000010000
  00000000000000010000
  00000002000000010000
  00000000000000010000
  ROOM1

  room2 = <<-ROOM0
  00000010000000000000
  00000010000000000000
  00000010020200100000
  00000010000000100000
  00000010000000100000
  02220010000000100000
  00000000000000100000
  11111111111111100000
  00000002000000000000
  00000002000000000000
  00001111111111111111
  00001000000000000000
  00001000000000000200
  00001000000010000000
  00001000000010000000
  00001000000010000000
  00001000000010000000
  00001000000010003000
  00000000020010000000
  00000000020010000000
  ROOM0

  room3 = <<-ROOM0
  00000000000000000000
  00000000000000000000
  00000111111111100000
  00000000000000100000
  00000100000000100000
  00000100000000100000
  00000100022000100000
  00000100000000100000
  00000111111111100000
  00000000000000000000
  11111111111111111000
  20000000000000000000
  20000000000000000000
  00001111111111111111
  00000000000000000002
  00000000000000000002
  11111111111111111000
  00000000020000000000
  00001111111111111111
  00000000020000000000
  ROOM0

  room4 = <<-ROOM0
  00000000000000000000
  00000000000002220000
  00000000000002320000
  00000000000002220000
  00000000000000000000
  00000000000000000000
  00001111111111111111
  00001000000010000000
  00001000000010010000
  00001000010010010000
  00001000010012210000
  00001000010010010000
  00001000010010010000
  00000020012000010000
  11111111111111111100
  00000000000000000000
  00011022211111111111
  00000000000002000000
  00000000000002000000
  00000000000002000000
  ROOM0

  room5 = <<-ROOM0
  00000000000000000000
  00000000000000000000
  01111111111111111110
  01000000000000010000
  01000000111100010010
  01000000100100012010
  01000000100100010010
  01000000100100010010
  01000020100102010010
  01000000100100010010
  01002000100100010010
  01000000100100010010
  01000020100100000010
  01000000100111111110
  01002000100200000000
  01000000111111111000
  01000000100000001000
  01000000000003001000
  01111111100000001000
  00000000000000001000
  ROOM0

  room6 = <<-ROOM0
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000222000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  10101010101010101010
  00000000000000000000
  00000000000000000000
  ROOM0

  room7 = <<-ROOM0
  00000000000000000000
  00000000000000000000
  11111111111111111110
  00000002000000000010
  00000212000000000010
  00000212000000000010
  00000002000000000000
  00111111111111111111
  00100000000000000000
  00102212212221110010
  00101111111111110010
  00100000000000000010
  00100000000000000010
  00000000000000000010
  11111111111111111110
  00000000000000000000
  00022201000000000000
  00023201000000000000
  00022201000000000000
  00000001000000000000
  ROOM0

  room8 = <<-ROOM0
  00000000000000000000
  00100000010000000000
  00020000010000000000
  00002000010000000000
  00000200000000000000
  11111111101111111111
  00000000101000000000
  00000000101000000000
  00000000020000000000
  00000000101000000000
  21111111111111111112
  00000000010000000000
  00000000010000000000
  00000000010000000000
  00000000010000000000
  11111111000111111111
  00000000000000000000
  02000000010000000020
  02000000010000000020
  00000000000000000000
  ROOM0

  room9 = <<-ROOM0
  00000000000000000000
  00020001111000000000
  00000001111000000000
  00000000000011111100
  00001000000000000000
  00001000000000000000
  00001001111111100100
  00001000000000100100
  00001000000020100100
  00001111110000100000
  00000000010000100000
  00000000010000100100
  00000000000000100100
  00111110010000100100
  00100000010000100000
  00100000010000100000
  00100220000000100000
  00100000000000100000
  00111111111111100300
  00000000000000000000
  ROOM0

  @_next_id = 100

  def next_id
    @_next_id = @_next_id + 1

    @_next_id
  end

  def string_to_map string
    string.lines.map(&:chars).map { |line| line.select { |char| char != "\n" } }.map { |line| line.map(&:to_i) }
  end

  def room id, map
    tiles = []
    enemies = []
    save_points = []

    map.each_with_index do |row, y|
      row.each_with_index do |column, x|
        if column == 1
          tiles << { x: x * 1000, y: y * 1000, blocking: true }
        elsif column == 0
          tiles << { x: x * 1000, y: y * 1000, blocking: false }
        elsif column == 2
          enemies << { id: next_id(), x: x * 1000, y: y * 1000, hp: Random.rand(15) + 5, speed: 1000, move_strategy: "NORMAL", type: ["ROCK", "PAPER", "SCISSORS"][Random.rand(3)] }
          tiles << { x: x * 1000, y: y * 1000, blocking: false }
        elsif column == 3
          save_points << { x: x * 1000, y: y * 1000 }
          tiles << { x: x * 1000, y: y * 1000, blocking: false }
        end
      end
    end

    {
      id: id,
      tiles: tiles,
      enemies: enemies,
      teleporters: [],
      save_points: save_points,
      npcs: [],
      merchants: []
    }
  end

  def teleporter room, x, y, target_room, target_x, target_y
    room[:teleporters] << { x: x * 1000, y: y * 1000, target_id: target_room, target_x: target_x, target_y: target_y }

    room
  end

  def boss room, x, y, hp, speed, on_death
    room[:enemies] << { id: next_id(), x: x * 1000, y: y * 1000, hp: hp, speed: speed, move_strategy: "TELEPORT", on_death: on_death, type: ["ROCK", "PAPER", "SCISSORS"][Random.rand(3)] }

    room
  end

  def npc room, x, y, name, saying, quest
    room[:npcs] << { id: next_id(), x: x * 1000, y: y * 1000, name: name, saying: saying, quest: quest}

    room
  end

  def merchant room, x, y, money, items
    room[:merchants] << { id: next_id(), x: x * 1000, y: y * 1000, money: money, items: items}

    room
  end

  levels = [
    {
      id: "level-1",
      rooms: [
        npc(teleporter(room("room-1", string_to_map(room1)), 19, 19, "room-2", 0, 0), 3, 0, "Wächter", "Willkommen im alten Schloss. Wo ihr schonmal hier seid, könnt ihr auch gleich mal aufräumen.", { id: next_id(), type: "KILL_QUEST", name: "Aufräumen", text: "Verscheuche alle Quälgeister in diesem Zimmer.", room_id: "room-1" }),
        merchant(teleporter(room("room-2", string_to_map(room2)), 19, 19, "room-3", 0, 0), 16, 19, 10, [{id: next_id(), type: "HEALTH_POTION"}, {id: next_id(), type: "HEALTH_POTION"}]),
        boss(room("room-3", string_to_map(room3)), 15, 7, 30, 1500, "level-2#room-4")
      ]
    },
    {
      id: "level-2",
      rooms: [
        npc(teleporter(room("room-4", string_to_map(room4)), 19, 19, "room-5", 0, 0), 3, 0, "Wächter", "Oh, du hast es ja sogar bis in den zweiten Stock geschafft", { id: next_id(), type: "KILL_QUEST", name: "Aufräumen", text: "Verscheuche alle Quälgeister in diesem Zimmer.", room_id: "room-4" }),
        merchant(teleporter(room("room-5", string_to_map(room5)), 19, 19, "room-6", 0, 0), 16, 19, 10, [{id: next_id(), type: "HEALTH_POTION"}, {id: next_id(), type: "WEAK_BOW"}]),
        boss(room("room-6", string_to_map(room6)), 15, 7, 50, 1500, "level-3#room-7")
      ]
    },
    {
      id: "level-3",
      rooms: [
        npc(teleporter(room("room-7", string_to_map(room7)), 19, 19, "room-8", 0, 0), 3, 0, "Wächter", "Man sagt, dass im hintersten Zimmer ein Geist den Schlüssel zu großen Ruhm bewacht", { id: next_id(), type: "KILL_QUEST", name: "Aufräumen", text: "Verscheuche alle Quälgeister im nächsten Zimmer.", room_id: "room-8" }),
        merchant(teleporter(room("room-8", string_to_map(room8)), 19, 19, "room-9", 0, 0), 16, 19, 10, [{id: next_id(), type: "HEALTH_POTION"}, {id: next_id(), type: "STRONG_BOW"}]),
        boss(room("room-9", string_to_map(room9)), 15, 7, 80, 1500, "VICTORY")
      ]
    }
  ]

%world
  - levels.each do |level|
    %level{id: level[:id]}
      - level[:rooms].each do |room|
        %room{id: room[:id]}
          - room[:tiles].each do |tile|
            %tile{blocking: tile[:blocking] ? "true" : "false"}
              %position{x: tile[:x], y: tile[:y]}
          - room[:enemies].each do |enemy|
            %enemy{id: enemy[:id], hitPoints: enemy[:hp], speed: enemy[:speed], moveStrategy: enemy[:move_strategy], onDeath: enemy[:on_death], type: enemy[:type] }
              %position{x: enemy[:x], y: enemy[:y]}
          - room[:teleporters].each do |teleporter|
            %teleporter{blocking: "false"}
              %position{x: teleporter[:x], y: teleporter[:y]}
              %target{roomId: teleporter[:target_id], x: teleporter[:target_x], y: teleporter[:target_y]}
          - room[:save_points].each do |save_point|
            %save-point
              %position{x: save_point[:x], y: save_point[:y]}
          - room[:merchants].each do |merchant|
            %merchant{id: merchant[:id], money: merchant[:money]}
              %position{x: merchant[:x], y: merchant[:y]}
              - merchant[:items].each do |item|
                %item{id: item[:id], type: item[:type]}
          - room[:npcs].each do |npc|
            %npc{id: npc[:id], name: npc[:name], saying: npc[:saying]}
              %position{x: npc[:x], y: npc[:y]}
              %quest{id: npc[:quest][:id], type: npc[:quest][:type], name: npc[:quest][:name], text: npc[:quest][:text], done: "false", roomId: npc[:quest][:room_id]}
